"""initial fks

Revision ID: 0c79593066ed
Revises: f9efedfb59a0
Create Date: 2019-11-14 11:36:14.795544

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0c79593066ed'
down_revision = 'f9efedfb59a0'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()


def upgrade_app():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key(op.f('account_fk_application_id'), 'account', 'application', ['application_id'], ['id'])
    op.create_foreign_key(op.f('account_google_fk_account_id'), 'account_google', 'account', ['account_id'], ['id'])
    op.create_foreign_key(op.f('account_openid_fk_account_id'), 'account_openid', 'account', ['account_id'], ['id'])
    op.create_foreign_key(op.f('application_fk_account_id'), 'application', 'account', ['account_id'], ['id'])
    op.create_foreign_key(op.f('source_fk_application_id'), 'source', 'application', ['application_id'], ['id'])
    op.create_foreign_key(op.f('source_fk_account_id'), 'source', 'account', ['account_id'], ['id'])
    op.create_foreign_key(op.f('stats_lookups_fk_application_id'), 'stats_lookups', 'application', ['application_id'], ['id'])
    op.create_foreign_key(op.f('stats_top_accounts_fk_account_id'), 'stats_top_accounts', 'account', ['account_id'], ['id'])
    op.create_foreign_key(op.f('stats_user_agents_fk_application_id'), 'stats_user_agents', 'application', ['application_id'], ['id'])
    # ### end Alembic commands ###


def downgrade_app():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('stats_user_agents_fk_application_id'), 'stats_user_agents', type_='foreignkey')
    op.drop_constraint(op.f('stats_top_accounts_fk_account_id'), 'stats_top_accounts', type_='foreignkey')
    op.drop_constraint(op.f('stats_lookups_fk_application_id'), 'stats_lookups', type_='foreignkey')
    op.drop_constraint(op.f('source_fk_account_id'), 'source', type_='foreignkey')
    op.drop_constraint(op.f('source_fk_application_id'), 'source', type_='foreignkey')
    op.drop_constraint(op.f('application_fk_account_id'), 'application', type_='foreignkey')
    op.drop_constraint(op.f('account_openid_fk_account_id'), 'account_openid', type_='foreignkey')
    op.drop_constraint(op.f('account_google_fk_account_id'), 'account_google', type_='foreignkey')
    op.drop_constraint(op.f('account_fk_application_id'), 'account', type_='foreignkey')
    # ### end Alembic commands ###


def upgrade_ingest():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_ingest():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def upgrade_fingerprint():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key(op.f('fingerprint_fk_track_id'), 'fingerprint', 'track', ['track_id'], ['id'])
    op.create_foreign_key(op.f('foreignid_fk_vendor_id'), 'foreignid', 'foreignid_vendor', ['vendor_id'], ['id'])
    op.create_foreign_key(op.f('track_fk_new_id'), 'track', 'track', ['new_id'], ['id'])
    op.create_foreign_key(op.f('track_foreignid_fk_foreignid_id'), 'track_foreignid', 'foreignid', ['foreignid_id'], ['id'])
    op.create_foreign_key(op.f('track_foreignid_fk_track_id'), 'track_foreignid', 'track', ['track_id'], ['id'])
    op.create_foreign_key(op.f('track_mbid_fk_track_id'), 'track_mbid', 'track', ['track_id'], ['id'])
    op.create_foreign_key(op.f('track_meta_fk_track_id'), 'track_meta', 'track', ['track_id'], ['id'])
    op.create_foreign_key(op.f('track_meta_fk_meta_id'), 'track_meta', 'meta', ['meta_id'], ['id'])
    op.create_foreign_key(op.f('track_puid_fk_track_id'), 'track_puid', 'track', ['track_id'], ['id'])
    # ### end Alembic commands ###


def downgrade_fingerprint():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('track_puid_fk_track_id'), 'track_puid', type_='foreignkey')
    op.drop_constraint(op.f('track_meta_fk_meta_id'), 'track_meta', type_='foreignkey')
    op.drop_constraint(op.f('track_meta_fk_track_id'), 'track_meta', type_='foreignkey')
    op.drop_constraint(op.f('track_mbid_fk_track_id'), 'track_mbid', type_='foreignkey')
    op.drop_constraint(op.f('track_foreignid_fk_track_id'), 'track_foreignid', type_='foreignkey')
    op.drop_constraint(op.f('track_foreignid_fk_foreignid_id'), 'track_foreignid', type_='foreignkey')
    op.drop_constraint(op.f('track_fk_new_id'), 'track', type_='foreignkey')
    op.drop_constraint(op.f('foreignid_fk_vendor_id'), 'foreignid', type_='foreignkey')
    op.drop_constraint(op.f('fingerprint_fk_track_id'), 'fingerprint', type_='foreignkey')
    # ### end Alembic commands ###
